{
  "builders": [
    {
      "access_key": "{{user `aws_access_key`}}",
      "ami_name": "{{user `ami_name_prefix`}}-{{isotime \"20060102030405\"}}",
      "ami_regions": "{{user `region`}}",
      "associate_public_ip_address": true,
      "force_deregister": true,
      "instance_type": "m4.large",
      "launch_block_device_mappings": [
        {
          "delete_on_termination": true,
          "device_name": "/dev/sda1",
          "volume_size": 15,
          "volume_type": "gp2"
        }
      ],
      "name": "delphix-ubuntu-bionic-guacamole",
      "region": "{{user `region`}}",
      "run_tags": {
        "branch": "{{ user `branch`}}",
        "commit": "{{ user `commit`}}",
        "dlpx:CostCenter": "{{user `dlpx:CostCenter`}}",
        "dlpx:Expiration": "{{isotime \"2006-01-02\"}}",
        "dlpx:Owner": "{{user `dlpx:Owner`}}",
        "dlpx:Project": "{{user `dlpx:Project`}}"
      },
      "run_volume_tags": {
        "branch": "{{ user `branch`}}",
        "commit": "{{ user `commit`}}",
        "dlpx:CostCenter": "{{user `dlpx:CostCenter`}}",
        "dlpx:Expiration": "{{isotime \"2006-01-02\"}}",
        "dlpx:Owner": "{{user `dlpx:Owner`}}",
        "dlpx:Project": "{{user `dlpx:Project`}}"
      },
      "secret_key": "{{user `aws_secret_key`}}",
      "source_ami_filter": {
        "filters": {
          "name": "ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server*"
        },
        "most_recent": true,
        "owners": [
          "099720109477"
        ]
      },
      "ssh_username": "ubuntu",
      "subnet_id": "{{user `subnet_id`}}",
      "tags": {
        "branch": "{{ user `branch`}}",
        "commit": "{{ user `commit`}}",
        "dlpx:CostCenter": "{{user `dlpx:CostCenter`}}",
        "dlpx:Expiration": "{{user `dlpx:Expiration`}}",
        "dlpx:Owner": "{{user `dlpx:Owner`}}",
        "dlpx:Project": "{{user `dlpx:Project`}}",
        "md5sum": "{{user `md5sum`}}",
        "release": "{{user `release`}}"
      },
      "type": "amazon-ebs",
      "vpc_id": "{{user `vpc_id`}}"
    }
  ],
  "post-processors": [],
  "provisioners": [
    {
      "inline": [
        "echo masking unattended-upgrades.service \u0026\u0026 sudo systemctl mask unattended-upgrades.service",
        "echo stopping unattended-upgrades.service \u0026\u0026 sudo systemctl stop unattended-upgrades.service",
        "echo masking apt-daily.service \u0026\u0026 sudo systemctl mask apt-daily.service",
        "echo stopping apt-daily.service \u0026\u0026 sudo systemctl stop apt-daily.service",
        "while systemctl is-active --quiet unattended-upgrades.service; do sleep 1; echo sleep;done",
        "while systemctl is-active --quiet apt-daily.service; do sleep 1; echo sleep;done",
        "while pgrep apt-get; do echo waiting for apt-get to stop; sleep 3; done",
        "sudo apt-get update",
        "sudo DEBIAN_FRONTEND=noninteractive apt-get dist-upgrade -yq",
        "i=0; until sudo apt-get install -y python-pip python-netaddr libmariadbclient-dev git; do if [ $i = 5 ]; then echo exiting after 5 attempts; exit 1; fi; i=$((i+1)); sleep 5; echo trying again; sudo apt-get update; done",
        "i=0; until sudo -H pip install ansible==2.8.0; do if [ $i = 5 ]; then echo exiting after 5 attempts; exit 1; fi; i=$((i+1)); sleep 5; echo trying again; done"
      ],
      "type": "shell"
    },
    {
      "ansible_env_vars": [
        "ANSIBLE_HOST_KEY_CHECKING=False"
      ],
      "playbook_file": "../ansible/workshop-base.yml",
      "type": "ansible",
      "user": "ubuntu"
    },
    {
      "ansible_env_vars": [
        "ANSIBLE_HOST_KEY_CHECKING=False"
      ],
      "playbook_file": "../ansible/vnc_setup.yml",
      "type": "ansible",
      "user": "ubuntu"
    },
    {
      "inline": [
        "echo HERE",
        "cat .config/systemd/user/vncserver*"
      ],
      "type": "shell"
    },
    {
      "ansible_env_vars": [
        "ANSIBLE_HOST_KEY_CHECKING=False"
      ],
      "playbook_file": "../ansible/mariadb.yml",
      "type": "ansible",
      "user": "ubuntu"
    },
    {
      "ansible_env_vars": [
        "ANSIBLE_HOST_KEY_CHECKING=False"
      ],
      "playbook_file": "../ansible/guacamole.yml",
      "type": "ansible",
      "user": "ubuntu"
    },
    {
      "inline": [
        "sudo sed -i -e '/.*'`hostname -s`'.*/d' /etc/hosts"
      ],
      "type": "shell"
    },
    {
      "inline": [
        "sudo rm -Rf /tmp/*"
      ],
      "type": "shell"
    },
    {
      "inline": [
        "cat /dev/null > .ssh/authorized_keys",
        "echo {{user `labalchemy_pub_key`}}>> .ssh/authorized_keys"
      ],
      "type": "shell"
    }
  ],
  "sensitive-variables": [
    "aws_access_key",
    "aws_secret_key"
  ],
  "variables": {
    "ami_name_prefix": "delphix-ubuntu-bionic-guacamole",
    "aws_access_key": "{{env `AWS_ACCESS_KEY_ID`}}",
    "aws_secret_key": "{{env `AWS_SECRET_ACCESS_KEY`}}",
    "branch": "{{env `GIT_BRANCH`}}",
    "commit": "{{env `GIT_COMMIT`}}",
    "dlpx:CostCenter": "{{env `AWS_COSTCENTER`}}",
    "dlpx:Expiration": "{{env `AWS_EXPIRATION`}}",
    "dlpx:Owner": "{{env `AWS_OWNER`}}",
    "dlpx:Project": "{{env `AWS_PROJECT`}}",
    "labalchemy_pub_key": "{{env `LABALCHEMY_PUB_KEY`}}",
    "md5sum": "",
    "region": "{{env `AWS_REGION`}}",
    "release": "{{env `RELEASE`}}",
    "seed": "8038586",
    "subnet_id": "{{env `AWS_SUBNET_ID`}}",
    "vpc_id": "{{env `AWS_VPC_ID`}}"
  }
}

